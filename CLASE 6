{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyPnSEOr/4CgH9swZeL1fk+6"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","source":["#define una funcion llamada \"ordenamientoPorSinsercion\" que recibe \"unaLista\" como un parametro\n","def ordenamientoPorInsercion (unaLista):\n","  #un ciclo que recorre la lista desde el indice 1 hasta el final\n","  for indice in range(1,len(unaLista)):\n","    #guarda el valor del elemento actual que queremos insertar en su lugar correcto\n","    valorActual = unaLista[indice]\n","    #guarda la posicion actual, que puede ir cambiando si el valor necesita moverse hacia la izquierda\n","    posicion = indice\n","\n","    #este bucle while se encarga de mover los elementos mayores que \"valorActual\" una posicion a la derecha\n","    #haceindo espacio para insertar \"valorActual\" en la posicion correcta\n","    while posicion>0 and unaLista [posicion-1]>valorActual:\n","      unaLista [posicion] = unaLista [posicion-1]\n","      posicion = posicion-1\n","\n","    #una vez encontrado el lugar correcto, se inserta \"valorActual\" en la posicion adecuada en la lista\n","    unaLista [posicion] = valorActual\n","\n","#aqui se crea una lista desordenada\n","unaLista = [54,26,93,17,77,31,44,55,20]\n","ordenamientoPorInsercion (unaLista)\n","\n","#se imprime el resultado\n","print (unaLista)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"sPJm8i44NIiU","executionInfo":{"status":"ok","timestamp":1747318824615,"user_tz":300,"elapsed":32,"user":{"displayName":"Elian Rodríguez","userId":"11078607768362254014"}},"outputId":"f3bbaa67-b1c1-460b-d8df-02ea752106a0"},"execution_count":4,"outputs":[{"output_type":"stream","name":"stdout","text":["[17, 20, 26, 31, 44, 54, 55, 77, 93]\n"]}]},{"cell_type":"code","source":["# Definimos la función \"ordenamientoPorSeleccion\" que recibe una lista como parámetro\n","def ordenamientoPorSeleccion(unaLista):\n","    # Recorremos la lista desde el final hacia el principio\n","    for llenarRanura in range(len(unaLista)-1, 0, -1):\n","        # Suponemos que el mayor valor está en la primera posición\n","        posicionDelMayor = 0\n","        # Buscamos el valor más grande entre la posición 0 y llenarRanura\n","        for ubicacion in range(1, llenarRanura + 1):\n","            # Si encontramos un valor mayor, actualizamos la posición del mayor\n","            if unaLista[ubicacion] > unaLista[posicionDelMayor]:\n","                posicionDelMayor = ubicacion\n","\n","        # Intercambiamos el mayor valor encontrado con el valor en la posición llenarRanura\n","        temp = unaLista[llenarRanura]\n","        unaLista[llenarRanura] = unaLista[posicionDelMayor]\n","        unaLista[posicionDelMayor] = temp\n","\n","# Creamos una lista desordenada\n","unaLista = [54, 26, 93, 17, 77, 31, 44, 55, 20]\n","# Llamamos a la función para ordenar la lista\n","ordenamientoPorSeleccion(unaLista)\n","\n","# Imprimimos la lista ya ordenada\n","print(unaLista)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"_6MObCnzbziT","executionInfo":{"status":"ok","timestamp":1747320798654,"user_tz":300,"elapsed":339,"user":{"displayName":"Elian Rodríguez","userId":"11078607768362254014"}},"outputId":"c005ec42-1215-44fb-fb54-6b6c0e5fbb6f"},"execution_count":5,"outputs":[{"output_type":"stream","name":"stdout","text":["[17, 20, 26, 31, 44, 54, 55, 77, 93]\n"]}]}]}