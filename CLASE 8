{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyP2Xwyj4KXUTfFNRHsrOYAh"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["##ALGORITMOS DE CONTEO"],"metadata":{"id":"VunUsvIwaQtL"}},{"cell_type":"code","execution_count":8,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Vpij25h8CA3P","executionInfo":{"status":"ok","timestamp":1747925325474,"user_tz":300,"elapsed":9,"user":{"displayName":"Elian Rodríguez","userId":"11078607768362254014"}},"outputId":"04337af8-15bc-47d9-e8e0-6f087dd32140"},"outputs":[{"output_type":"stream","name":"stdout","text":["frecuencia de palabras:\n","El: 1\n","ordenamiento: 3\n","por: 2\n","conteo: 2\n","es: 3\n","un: 1\n","algoritmo: 1\n","de: 6\n","no: 1\n","basado: 1\n","en: 4\n","comparaciones: 1\n",".: 1\n","Es: 1\n","especialmente: 1\n","eficiente: 1\n","cuando: 1\n","el: 2\n","rango: 1\n","valores: 1\n","entrada: 2\n","pequeño: 1\n","comparación: 1\n","con: 1\n","número: 1\n","elementos: 2\n","a: 1\n","ordenar.: 1\n","La: 1\n","idea: 1\n","básica: 1\n","del: 1\n","contar: 1\n","la: 2\n","frecuencia: 1\n","cada: 1\n","elemento: 1\n","matriz: 1\n","y: 1\n","usar: 1\n","esa: 1\n","información: 1\n","para: 1\n","colocar: 1\n","los: 1\n","sus: 1\n","posiciones: 1\n","correctas: 1\n"]}],"source":["from collections import Counter\n","\n","texto = \"El ordenamiento por conteo es un algoritmo de ordenamiento no basado en comparaciones . Es especialmente eficiente cuando el rango de valores de entrada es pequeño en comparación con el número de elementos a ordenar. La idea básica del ordenamiento por conteo es contar la frecuencia de cada elemento en la matriz de entrada y usar esa información para colocar los elementos en sus posiciones correctas\"\n","\n","palabras = texto.split()\n","\n","frecuencia = Counter(palabras)\n","\n","print (\"frecuencia de palabras:\")\n","for palabra, conteo in frecuencia.items():\n","    print (f\"{palabra}: {conteo}\")"]},{"cell_type":"code","source":["palabras = [\"to\", \"begin\", \"to\", \"toboggan\", \"first\", \"buy\", \"a\", \"toboggan,\", \"but\", \"don't\", \"buy\", \"too\", \"big\", \"a\", \"toboggan.\", \"Too\", \"big\", \"a\", \"toboggan\", \"is\", \"too\", \"big\", \"a\", \"toboggan\", \"to\", \"buy\", \"to\", \"begin\", \"to\", \"toboggan\"]\n","contador = {}\n","for palabra in palabras:\n","  if palabra in contador:\n","    contador[palabra] += 1\n","  else:\n","    contador[palabra] = 1\n","print(contador)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"HgjFZP-GfPM_","executionInfo":{"status":"ok","timestamp":1747927650279,"user_tz":300,"elapsed":11,"user":{"displayName":"Elian Rodríguez","userId":"11078607768362254014"}},"outputId":"3a36caac-5081-4afb-f979-e0a994741150"},"execution_count":18,"outputs":[{"output_type":"stream","name":"stdout","text":["{'to': 5, 'begin': 2, 'toboggan': 4, 'first': 1, 'buy': 3, 'a': 4, 'toboggan,': 1, 'but': 1, \"don't\": 1, 'too': 2, 'big': 3, 'toboggan.': 1, 'Too': 1, 'is': 1}\n"]}]}]}